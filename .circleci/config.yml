version: 2.1

orbs:
  azure-acr: circleci/azure-acr@0.2.1
  azure-aks: circleci/azure-aks@0.3.0

environment:
  RELEASE_VERSION: "0.$CIRCLE_WORKFLOW_ID.0"
  PACKAGE_NAME: "$CHART_NAME-$RELEASE_VERSION.tgz"

jobs:
  update-helm-chart:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Install yq - portable yaml processor 
          command: |
            URL=https://github.com/mikefarah/yq/releases/download/3.3.4/yq_linux_amd64
            [ -w /usr/local/bin ] && SUDO="" || SUDO=sudo
            $SUDO wget $URL
            $SUDO mv ./yq_linux_amd64 /usr/local/bin/yq
            $SUDO chmod +x /usr/local/bin/yq
      - checkout
      - run:
          name: Update Values.yaml
          command: |
            yq w -i $CHART_NAME/values.yaml image.tag "$CIRCLE_SHA1"
            yq w -i $CHART_NAME/Chart.yaml version $RELEASE_VERSION
      - add_ssh_keys:
          fingerprints:
            - "$SSH_FINGERPRINT"
      - run:
          name: Commit & Push to GitHub
          command: |
            git config user.email "$GITHUB_EMAIL"
            git config user.name "CircleCI User"
            git checkout $CIRCLE_BRANCH           
            git commit -am "Update Values.yaml [skip ci]"
            git push origin $CIRCLE_BRANCH

  package-push-helm-chart:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Install and configure helm
          command: sudo curl -L https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar xz && sudo mv linux-amd64/helm /bin/helm && sudo rm -rf linux-amd64
      - checkout
      - run:
          name: Pull Updated code from repo
          command: git pull origin $CIRCLE_BRANCH
      - run:
          name: Packaging the Helm Chart 
          command: helm package $CHART_NAME
      - run:
          name: Login to Helm Registry
          command: helm registry login $ACR_LOGIN_SERVER --username $ACR_USERNAME --password $ACR_PASSWORD
      - run:
          name: Pushing Helm chart to registry
          command: helm push $PACKAGE_NAME oci://$ACR_LOGIN_SERVER/helm

  install-helm:
    executor: azure-aks/default
    parameters:
      cluster-name:
        description: |
          Name of the AKS cluster
        type: string
      resource-group:
        description: |
          Resource group that the cluster is in
        type: string
    steps:
      - checkout
      - run:
          name: Pull Updated code from repo
          command: git pull origin $CIRCLE_BRANCH
      - azure-aks/update-kubeconfig-with-credentials:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
          perform-login: true
          resource-group: << parameters.resource-group >>
      - run:
          name: Install and configure helm
          command: sudo curl -L https://get.helm.sh/helm-v3.10.1-linux-amd64.tar.gz | tar xz && sudo mv linux-amd64/helm /bin/helm && sudo rm -rf linux-amd64
      - run:
          name: helm install
          command: bash ./script.sh $RELEASE_VERSION $NAMESPACE $CHART_NAME $ACR_LOGIN_SERVER

workflows:
  Deploy-App-on-AKS:
    jobs:
      - azure-acr/build-and-push-image:
          login-server-name: $ACR_LOGIN_SERVER
          registry-name: $ACR_REGISTRY_NAME
          repo: $APP_NAME
          tag: $CIRCLE_SHA1,latest
      - update-helm-chart:
          requires:
            - azure-acr/build-and-push-image
      - package-push-helm-chart:
          requires:
            - update-helm-chart      
      - install-helm:
          cluster-name: $CLUSTER_NAME
          resource-group: $RESOURCE_GROUP
          requires:
            - package-push-helm-chart
          
